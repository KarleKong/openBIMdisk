# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from hfc.protos.orderer import cluster_pb2 as hfc_dot_protos_dot_orderer_dot_cluster__pb2


class ClusterStub(object):
    """Cluster defines communication between cluster members.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Step = channel.stream_stream(
                '/orderer.Cluster/Step',
                request_serializer=hfc_dot_protos_dot_orderer_dot_cluster__pb2.StepRequest.SerializeToString,
                response_deserializer=hfc_dot_protos_dot_orderer_dot_cluster__pb2.StepResponse.FromString,
                )


class ClusterServicer(object):
    """Cluster defines communication between cluster members.
    """

    def Step(self, request_iterator, context):
        """Step passes an implementation-specific message to another cluster member.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClusterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Step': grpc.stream_stream_rpc_method_handler(
                    servicer.Step,
                    request_deserializer=hfc_dot_protos_dot_orderer_dot_cluster__pb2.StepRequest.FromString,
                    response_serializer=hfc_dot_protos_dot_orderer_dot_cluster__pb2.StepResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'orderer.Cluster', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Cluster(object):
    """Cluster defines communication between cluster members.
    """

    @staticmethod
    def Step(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/orderer.Cluster/Step',
            hfc_dot_protos_dot_orderer_dot_cluster__pb2.StepRequest.SerializeToString,
            hfc_dot_protos_dot_orderer_dot_cluster__pb2.StepResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
